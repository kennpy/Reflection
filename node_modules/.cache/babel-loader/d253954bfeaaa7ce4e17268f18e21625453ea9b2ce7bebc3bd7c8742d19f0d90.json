{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/FetchTemplateButton.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PORT\n} = require(\"../backendConfig\");\nconst FETCH_TEMPLATE_PATH = `http://localhost:${PORT}/templates`;\n\n//TODO : Add setAudio prop to update audio component\nconst FetchTemplateButton = _ref => {\n  let {\n    setCaption\n  } = _ref;\n  function handleClick() {\n    const template = fetch(FETCH_TEMPLATE_PATH, {}).then(data => data.json()).then(template => {\n      console.log(template);\n      // update audio and show elements on screen\n      //updateAudio(template.audioFile);\n      iterateCaptions(template, setCaption);\n      console.log(\"caption blank\");\n      setCaption(\"\");\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: \"Fetch Template\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n_c = FetchTemplateButton;\nexport default FetchTemplateButton;\nfunction iterateCaptions(template, setCaption) {\n  for (const item of template.lyrics) {\n    setTimeout(() => {\n      setCaption(item.lyric);\n      console.log(\"caption filled\");\n    }, item.duration);\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"FetchTemplateButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PORT","require","FETCH_TEMPLATE_PATH","FetchTemplateButton","_ref","setCaption","handleClick","template","fetch","then","data","json","console","log","iterateCaptions","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","item","lyrics","setTimeout","lyric","duration","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/FetchTemplateButton.js"],"sourcesContent":["import React from \"react\";\nconst { PORT } = require(\"../backendConfig\");\nconst FETCH_TEMPLATE_PATH = `http://localhost:${PORT}/templates`;\n\n//TODO : Add setAudio prop to update audio component\nconst FetchTemplateButton = ({ setCaption }) => {\n  function handleClick() {\n    const template = fetch(FETCH_TEMPLATE_PATH, {})\n      .then((data) => data.json())\n      .then((template) => {\n        console.log(template);\n        // update audio and show elements on screen\n        //updateAudio(template.audioFile);\n        iterateCaptions(template, setCaption);\n        console.log(\"caption blank\");\n        setCaption(\"\");\n      });\n  }\n  return <button onClick={handleClick}>Fetch Template</button>;\n};\n\nexport default FetchTemplateButton;\n\nfunction iterateCaptions(template, setCaption) {\n  for (const item of template.lyrics) {\n    setTimeout(() => {\n      setCaption(item.lyric);\n      console.log(\"caption filled\");\n    }, item.duration);\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAM;EAAEC;AAAK,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC5C,MAAMC,mBAAmB,GAAI,oBAAmBF,IAAK,YAAW;;AAEhE;AACA,MAAMG,mBAAmB,GAAGC,IAAA,IAAoB;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EACzC,SAASE,WAAWA,CAAA,EAAG;IACrB,MAAMC,QAAQ,GAAGC,KAAK,CAACN,mBAAmB,EAAE,CAAC,CAAC,CAAC,CAC5CO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEF,QAAQ,IAAK;MAClBK,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACrB;MACA;MACAO,eAAe,CAACP,QAAQ,EAAEF,UAAU,CAAC;MACrCO,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BR,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC;EACN;EACA,oBAAON,OAAA;IAAQgB,OAAO,EAAET,WAAY;IAAAU,QAAA,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC9D,CAAC;AAACC,EAAA,GAdIlB,mBAAmB;AAgBzB,eAAeA,mBAAmB;AAElC,SAASW,eAAeA,CAACP,QAAQ,EAAEF,UAAU,EAAE;EAC7C,KAAK,MAAMiB,IAAI,IAAIf,QAAQ,CAACgB,MAAM,EAAE;IAClCC,UAAU,CAAC,MAAM;MACfnB,UAAU,CAACiB,IAAI,CAACG,KAAK,CAAC;MACtBb,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/B,CAAC,EAAES,IAAI,CAACI,QAAQ,CAAC;EACnB;AACF;AAAC,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}