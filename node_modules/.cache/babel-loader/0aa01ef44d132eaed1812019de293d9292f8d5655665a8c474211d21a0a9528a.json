{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(false);\n  const [loginMessage, setLoginMessage] = useState(\"\");\n  function handleLogin() {\n    let formIsFilled = true;\n    if (username === \"\") {\n      setLoginError(\"Username cannot be empty\");\n    } else if (password === \"\") {\n      setLoginError(\"Password cannot be empty\");\n    }\n    console.log(\"Loggin in \", username, password);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Invalid username or password. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"9seAce/WGjdG4F4rDrKiKMMAXKw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","loginError","setLoginError","loginMessage","setLoginMessage","handleLogin","formIsFilled","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(false);\n  const [loginMessage, setLoginMessage] = useState(\"\");\n\n  function handleLogin() {\n    let formIsFilled = true;\n    if (username === \"\") {\n      setLoginError(\"Username cannot be empty\");\n    } else if (password === \"\") {\n      setLoginError(\"Password cannot be empty\");\n    }\n\n    console.log(\"Loggin in \", username, password);\n  }\n\n  return (\n    <div>\n      <h2>Login Page</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      {loginError && <p>Invalid username or password. Please try again.</p>}\n\n      <button onClick={handleLogin}>Login</button>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpD,SAASa,WAAWA,CAAA,EAAG;IACrB,IAAIC,YAAY,GAAG,IAAI;IACvB,IAAIT,QAAQ,KAAK,EAAE,EAAE;MACnBK,aAAa,CAAC,0BAA0B,CAAC;IAC3C,CAAC,MAAM,IAAIH,QAAQ,KAAK,EAAE,EAAE;MAC1BG,aAAa,CAAC,0BAA0B,CAAC;IAC3C;IAEAK,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEX,QAAQ,EAAEE,QAAQ,CAAC;EAC/C;EAEA,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFnB,OAAA;MACEoB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EACDZ,UAAU,iBAAIP,OAAA;MAAAe,QAAA,EAAG;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAErEnB,OAAA;MAAQ0B,OAAO,EAAEf,WAAY;MAAAI,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACjB,EAAA,CArCQD,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAuCd,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}