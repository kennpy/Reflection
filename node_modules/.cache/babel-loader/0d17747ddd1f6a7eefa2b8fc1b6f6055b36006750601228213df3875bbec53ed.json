{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/Audio.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AudioElement(_ref) {\n  let {\n    source,\n    playSound,\n    startingTime\n  } = _ref;\n  let audio = new Audio(source);\n  audio.currentTime = startingTime;\n  playSound ? audio.play() : audio.pause();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Playing Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = AudioElement;\nexport default AudioElement;\nvar _c;\n$RefreshReg$(_c, \"AudioElement\");","map":{"version":3,"names":["AudioElement","_ref","source","playSound","startingTime","audio","Audio","currentTime","play","pause","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/Audio.js"],"sourcesContent":["function AudioElement({ source, playSound, startingTime }) {\n  let audio = new Audio(source);\n  audio.currentTime = startingTime;\n  playSound ? audio.play() : audio.pause();\n  return (\n    <>\n      <p>Playing Audio</p>\n      {/* <audio controls loop>\n        <source src={audioData.src} type=\"audio/mp3\" />\n      </audio> */}\n    </>\n  );\n}\n\nexport default AudioElement;\n"],"mappings":";;;AAAA,SAASA,YAAYA,CAAAC,IAAA,EAAsC;EAAA,IAArC;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAAH,IAAA;EACvD,IAAII,KAAK,GAAG,IAAIC,KAAK,CAACJ,MAAM,CAAC;EAC7BG,KAAK,CAACE,WAAW,GAAGH,YAAY;EAChCD,SAAS,GAAGE,KAAK,CAACG,IAAI,CAAC,CAAC,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC;EACxC,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC,gBAIpB,CAAC;AAEP;AAACC,EAAA,GAZQjB,YAAY;AAcrB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}