{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/TemplateForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PORT\n} = require(\"../backendConfig\");\nconst FETCH_TEMPLATE_PATH = `http://localhost:${PORT}/templates`;\nfunction TemplateForm(_ref) {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [mp3, setMp3] = useState();\n  const [lyrics, setLyrics] = useState([]);\n  const [singleLyric, setSingleLyric] = useState(\"\");\n  const [lyricDuration, setLyricDuration] = useState([]);\n  function checkFormIsFilled() {\n    console.log(mp3);\n    return lyricDuration !== \"\" && singleLyric !== \"\"\n    //      mp3 !== \"\"\n    ;\n  }\n\n  async function handleSubmission(evt) {\n    evt.preventDefault();\n    const formIsFilled = checkFormIsFilled();\n    console.log(formIsFilled);\n    console.log(mp3);\n    // if (formIsFilled) {\n    //   // validate sign in info on backend and sign them in\n    //   fetch(FETCH_LOGIN_PATH, {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       username,\n    //       password,\n    //     }),\n    //   })\n    //     .then((res) => res.json())\n    //     .then((login) => {\n    //       if (login.success) {\n    //         console.log(\"LOGIN SUCCESS\", login);\n    //         setUserId(login.userId);\n    //         setUserName(login.username);\n    //       } else {\n    //         console.log(\"LOGIN FAILURE\");\n    //       }\n    //     });\n    //   // else show invalid credentials\n    // }\n  }\n\n  function addLyric(event) {\n    event.preventDefault();\n    setLyrics(oldLyrics => [...oldLyrics, {\n      lyric: singleLyric,\n      duration: lyricDuration\n    }]);\n  }\n  function handleFileChange(event) {\n    const audioFile = event.target.files[0];\n    if (checkFormIsFilled()) {\n      console.log(audioFile);\n      const formData = new FormData();\n      formData.append(\"mp3\", audioFile);\n      formData.append(\"lyrics\", JSON.stringify(lyrics));\n      formData.append(\"userId\", userId);\n      fetch(FETCH_TEMPLATE_PATH, {\n        method: \"POST\",\n        body: formData\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n      });\n    }\n    //setMp3(event.target.files[0]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MAKE NEW FORM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mp3\",\n          children: \"MP3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: mp3,\n          placeholder: \"MP3\",\n          onChange: handleFileChange,\n          id: \"mp3\",\n          name: \"mp3\",\n          type: \"file\",\n          autoComplete: \"off\",\n          required: true,\n          accept: \"audio/mpeg3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lyric\",\n          children: \"Caption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: singleLyric,\n          placeholder: \"Caption\",\n          onChange: e => setSingleLyric(e.target.value),\n          id: \"lyric\",\n          name: \"lyric\",\n          type: \"text\",\n          autoComplete: \"off\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: lyricDuration,\n          placeholder: \"Lyric Duration\",\n          onChange: e => setLyricDuration(e.target.value),\n          id: \"lyricDuration\",\n          name: \"lyricDuration\",\n          type: \"number\",\n          autoComplete: \"off\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"add-lyric-btn\",\n          onClick: addLyric,\n          children: \"Add Lyric\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSubmission,\n          children: \"Make Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(TemplateForm, \"3m3bkw2UaDjpK/QRqGjaTxK1UdY=\");\n_c = TemplateForm;\nexport default TemplateForm;\nvar _c;\n$RefreshReg$(_c, \"TemplateForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PORT","require","FETCH_TEMPLATE_PATH","TemplateForm","_ref","_s","userId","mp3","setMp3","lyrics","setLyrics","singleLyric","setSingleLyric","lyricDuration","setLyricDuration","checkFormIsFilled","console","log","handleSubmission","evt","preventDefault","formIsFilled","addLyric","event","oldLyrics","lyric","duration","handleFileChange","audioFile","target","files","formData","FormData","append","JSON","stringify","fetch","method","body","then","res","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","placeholder","onChange","id","name","type","autoComplete","required","accept","e","onClick","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/TemplateForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nconst { PORT } = require(\"../backendConfig\");\nconst FETCH_TEMPLATE_PATH = `http://localhost:${PORT}/templates`;\n\nfunction TemplateForm({ userId }) {\n  const [mp3, setMp3] = useState();\n  const [lyrics, setLyrics] = useState([]);\n  const [singleLyric, setSingleLyric] = useState(\"\");\n  const [lyricDuration, setLyricDuration] = useState([]);\n\n  function checkFormIsFilled() {\n    console.log(mp3);\n    return (\n      lyricDuration !== \"\" && singleLyric !== \"\"\n      //      mp3 !== \"\"\n    );\n  }\n\n  async function handleSubmission(evt) {\n    evt.preventDefault();\n    const formIsFilled = checkFormIsFilled();\n    console.log(formIsFilled);\n    console.log(mp3);\n    // if (formIsFilled) {\n    //   // validate sign in info on backend and sign them in\n    //   fetch(FETCH_LOGIN_PATH, {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       username,\n    //       password,\n    //     }),\n    //   })\n    //     .then((res) => res.json())\n    //     .then((login) => {\n    //       if (login.success) {\n    //         console.log(\"LOGIN SUCCESS\", login);\n    //         setUserId(login.userId);\n    //         setUserName(login.username);\n    //       } else {\n    //         console.log(\"LOGIN FAILURE\");\n    //       }\n    //     });\n    //   // else show invalid credentials\n    // }\n  }\n\n  function addLyric(event) {\n    event.preventDefault();\n    setLyrics((oldLyrics) => [\n      ...oldLyrics,\n      { lyric: singleLyric, duration: lyricDuration },\n    ]);\n  }\n\n  function handleFileChange(event) {\n    const audioFile = event.target.files[0];\n    if (checkFormIsFilled()) {\n      console.log(audioFile);\n      const formData = new FormData();\n      formData.append(\"mp3\", audioFile);\n      formData.append(\"lyrics\", JSON.stringify(lyrics));\n      formData.append(\"userId\", userId);\n      fetch(FETCH_TEMPLATE_PATH, {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n        });\n    }\n    //setMp3(event.target.files[0]);\n  }\n\n  return (\n    <div className=\"login-page\">\n      <h2>MAKE NEW FORM</h2>\n      <form>\n        <div>\n          <label htmlFor=\"mp3\">MP3</label>\n          <input\n            value={mp3}\n            placeholder=\"MP3\"\n            onChange={handleFileChange}\n            id=\"mp3\"\n            name=\"mp3\"\n            type=\"file\"\n            autoComplete=\"off\"\n            required\n            accept=\"audio/mpeg3\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <label htmlFor=\"lyric\">Caption</label>\n          <input\n            value={singleLyric}\n            placeholder=\"Caption\"\n            onChange={(e) => setSingleLyric(e.target.value)}\n            id=\"lyric\"\n            name=\"lyric\"\n            type=\"text\"\n            autoComplete=\"off\"\n            required\n          />\n          <input\n            value={lyricDuration}\n            placeholder=\"Lyric Duration\"\n            onChange={(e) => setLyricDuration(e.target.value)}\n            id=\"lyricDuration\"\n            name=\"lyricDuration\"\n            type=\"number\"\n            autoComplete=\"off\"\n            required\n          />\n          <br></br>\n\n          <button type=\"add-lyric-btn\" onClick={addLyric}>\n            Add Lyric\n          </button>\n        </div>\n        <div>\n          <br></br>\n\n          <button type=\"submit\" onClick={handleSubmission}>\n            Make Template\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default TemplateForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}