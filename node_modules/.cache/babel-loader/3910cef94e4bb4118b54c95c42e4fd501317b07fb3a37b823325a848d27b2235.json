{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/Audio.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AudioElement(_ref) {\n  _s();\n  let {\n    audiosource,\n    playSound,\n    startingTime\n  } = _ref;\n  const [audioStatusLabel, setAudioStatusLabel] = useState(\"\");\n  console.log(\"Rendering AudioElement\", playSound);\n  useEffect(() => {\n    console.log(\"useEffect being called in AudioElement\", playSound);\n    let audio = new Audio(source);\n    audio.currentTime = startingTime;\n    playSound ? playAudio(audio) : pauseAudio(audio);\n  }, [playSound]);\n  function playAudio(audio) {\n    audio.play();\n    setAudioStatusLabel(\"Playing audio ...\");\n  }\n  function pauseAudio(audio) {\n    audio.pause();\n    setAudioStatusLabel(\"Pausing audio ...\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: audioStatusLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AudioElement, \"xiUJhv61p3vsd6xDmMYmLsixtjI=\");\n_c = AudioElement;\nexport default AudioElement;\nvar _c;\n$RefreshReg$(_c, \"AudioElement\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioElement","_ref","_s","audiosource","playSound","startingTime","audioStatusLabel","setAudioStatusLabel","console","log","audio","Audio","source","currentTime","playAudio","pauseAudio","play","pause","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/Audio.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction AudioElement({ audiosource, playSound, startingTime }) {\n  const [audioStatusLabel, setAudioStatusLabel] = useState(\"\");\n  console.log(\"Rendering AudioElement\", playSound);\n  useEffect(() => {\n    console.log(\"useEffect being called in AudioElement\", playSound);\n    let audio = new Audio(source);\n    audio.currentTime = startingTime;\n    playSound ? playAudio(audio) : pauseAudio(audio);\n  }, [playSound]);\n\n  function playAudio(audio) {\n    audio.play();\n    setAudioStatusLabel(\"Playing audio ...\");\n  }\n\n  function pauseAudio(audio) {\n    audio.pause();\n    setAudioStatusLabel(\"Pausing audio ...\");\n  }\n\n  return (\n    <>\n      <p>{audioStatusLabel}</p>\n      {/* <audio controls loop>\n        <source src={audioData.src} type=\"audio/mp3\" />\n      </audio> */}\n    </>\n  );\n}\n\nexport default AudioElement;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,YAAYA,CAAAC,IAAA,EAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAAJ,IAAA;EAC5D,MAAM,CAACK,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5Da,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEL,SAAS,CAAC;EAChDV,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEL,SAAS,CAAC;IAChE,IAAIM,KAAK,GAAG,IAAIC,KAAK,CAACC,MAAM,CAAC;IAC7BF,KAAK,CAACG,WAAW,GAAGR,YAAY;IAChCD,SAAS,GAAGU,SAAS,CAACJ,KAAK,CAAC,GAAGK,UAAU,CAACL,KAAK,CAAC;EAClD,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,SAASU,SAASA,CAACJ,KAAK,EAAE;IACxBA,KAAK,CAACM,IAAI,CAAC,CAAC;IACZT,mBAAmB,CAAC,mBAAmB,CAAC;EAC1C;EAEA,SAASQ,UAAUA,CAACL,KAAK,EAAE;IACzBA,KAAK,CAACO,KAAK,CAAC,CAAC;IACbV,mBAAmB,CAAC,mBAAmB,CAAC;EAC1C;EAEA,oBACEV,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAAqB,QAAA,EAAIZ;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBAIzB,CAAC;AAEP;AAACpB,EAAA,CA5BQF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA8BrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}