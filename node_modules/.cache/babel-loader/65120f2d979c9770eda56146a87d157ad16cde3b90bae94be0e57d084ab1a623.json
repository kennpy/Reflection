{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PORT\n} = require(\"../backendConfig\");\nconst FETCH_LOGIN_PATH = `http://localhost:${PORT}/users/login`;\nconst FETCH_REGISTER_PATH = `http://localhost:${PORT}/users/register`;\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginErrorExists, setLoginError] = useState(false);\n  const [loginErrorMessage, setLoginErrorMessage] = useState(\"\");\n  function checkFormIsFilled() {\n    let formIsFilled = true;\n    if (username === \"\") {\n      setLoginErrorMessage(\"Username cannot be empty\");\n      formIsFilled = false;\n    } else if (password === \"\") {\n      setLoginErrorMessage(\"Password cannot be empty\");\n      formIsFilled = false;\n    }\n    return formIsFilled;\n  }\n  async function handleLogin(evt) {\n    const formIsFilled = checkFormIsFilled();\n    if (formIsFilled) {\n      // validate sign in info on backend and sign them in\n      const response = await fetch(FETCH_LOGIN_PATH, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      console.log(\"login response : \", response);\n      //else show invalid credentials\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value),\n        id: \"username\",\n        name: \"username\",\n        type: \"text\",\n        autocomplete: \"username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"current-password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value),\n        id: \"current-password\",\n        name: \"password\",\n        type: \"password\",\n        autocomplete: \"current-password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleLogin,\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"b6y1khU/cky2Zm0xKO3gvNQ95rE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PORT","require","FETCH_LOGIN_PATH","FETCH_REGISTER_PATH","Login","_s","username","setUsername","password","setPassword","loginErrorExists","setLoginError","loginErrorMessage","setLoginErrorMessage","checkFormIsFilled","formIsFilled","handleLogin","evt","response","fetch","method","headers","body","JSON","stringify","console","log","children","for","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onChange","e","target","id","name","type","autocomplete","required","onClick","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nconst { PORT } = require(\"../backendConfig\");\nconst FETCH_LOGIN_PATH = `http://localhost:${PORT}/users/login`;\nconst FETCH_REGISTER_PATH = `http://localhost:${PORT}/users/register`;\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginErrorExists, setLoginError] = useState(false);\n  const [loginErrorMessage, setLoginErrorMessage] = useState(\"\");\n\n  function checkFormIsFilled() {\n    let formIsFilled = true;\n    if (username === \"\") {\n      setLoginErrorMessage(\"Username cannot be empty\");\n      formIsFilled = false;\n    } else if (password === \"\") {\n      setLoginErrorMessage(\"Password cannot be empty\");\n      formIsFilled = false;\n    }\n    return formIsFilled;\n  }\n\n  async function handleLogin(evt) {\n    const formIsFilled = checkFormIsFilled();\n    if (formIsFilled) {\n      // validate sign in info on backend and sign them in\n      const response = await fetch(FETCH_LOGIN_PATH, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username,\n          password,\n        }),\n      });\n      console.log(\"login response : \", response);\n      //else show invalid credentials\n    }\n  }\n\n  return (\n    <form>\n      <div>\n        <label for=\"username\">Username</label>\n        <input\n          value={username}\n          placeholder=\"Username\"\n          onChange={(e) => setUsername(e.target.value)}\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          autocomplete=\"username\"\n          required\n        />\n      </div>\n      <div>\n        <label for=\"current-password\">Password</label>\n        <input\n          value={password}\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n          id=\"current-password\"\n          name=\"password\"\n          type=\"password\"\n          autocomplete=\"current-password\"\n          required\n        />\n      </div>\n      <div>\n        <button type=\"submit\" onClick={handleLogin}>\n          Sign in\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}