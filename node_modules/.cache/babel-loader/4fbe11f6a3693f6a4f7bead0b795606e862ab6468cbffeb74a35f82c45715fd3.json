{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/SideBar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PORT\n} = require(\"../backendConfig\");\nconst FETCH_TEMPLATE_PATH = `http://localhost:${PORT}/templates`;\nfunction useTraceUpdate(answers, setCaption, setAudioSource, setSoundStatus, setStartingTime, makeNewAudio, setTemplateId) {\n  _s();\n  const prev = useRef(answers, setCaption, setAudioSource, setSoundStatus, setStartingTime, makeNewAudio, setTemplateId);\n  useEffect(() => {\n    const changedProps = Object.entries(answers, setCaption, setAudioSource, setSoundStatus, setStartingTime, makeNewAudio, setTemplateId).reduce((ps, _ref) => {\n      let [k, v] = _ref;\n      if (prev.current[k] !== v) {\n        ps[k] = [prev.current[k], v];\n      }\n      return ps;\n    }, {});\n    if (Object.keys(changedProps).length > 0) {\n      console.log(\"Changed props:\", changedProps);\n    }\n    prev.current = props;\n  });\n}\n_s(useTraceUpdate, \"FlkXitFxLam4DI4igPRHKSSZie8=\");\nfunction SideBar(_ref2) {\n  _s2();\n  let {\n    answers,\n    setCaption,\n    setAudioSource,\n    setSoundStatus,\n    setStartingTime,\n    makeNewAudio,\n    setTemplateId\n  } = _ref2;\n  useTraceUpdate(answers, setCaption, setAudioSource, setSoundStatus, setStartingTime, makeNewAudio, setTemplateId);\n  async function iterateCaptions(template, setCaption) {\n    for (const item of template.lyrics) {\n      await setCaptionForDuration(item.lyric, item.duration, setCaption);\n    }\n  }\n  function setCaptionForDuration(lyric, duration, setCaption) {\n    return new Promise(resolve => {\n      setCaption(lyric);\n      setTimeout(() => resolve(), duration);\n    });\n  }\n  function getTotalCaptionTime(template) {\n    let totalDuration = 0;\n    for (let item of template.lyrics) {\n      totalDuration += item.duration;\n    }\n    return totalDuration;\n  }\n  async function startAudio(template) {\n    const audioFilePrefix = \"data:audio/mpeg;base64,\";\n    //setAudioSource(audioFilePrefix + template.audioFile);\n    setTemplateId(template._id);\n    setStartingTime(0);\n    setSoundStatus(true);\n    makeNewAudio(new Audio(audioFilePrefix + template.audioFile));\n    const totalCaptionTime = getTotalCaptionTime(template);\n    setTimeout(() => setSoundStatus(false), totalCaptionTime);\n    await iterateCaptions(template, setCaption);\n    setCaption(\"Time to reflect ...\");\n  }\n  function handleClick(event) {\n    console.log(event.source);\n    const template = fetch(FETCH_TEMPLATE_PATH, {}).then(data => data.json()).then(template => {\n      console.log(template);\n      // update audio and show elements on screen\n      //updateAudio(template.audioFile);\n      //const audioAsBinary = window.atob(template.audioFile);\n      startAudio(template);\n    });\n    const listItems = answers && answers.map(answer => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer.templateId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, answer._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this));\n    console.log(\"Rendering sidebar : \", listItems);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: handleClick,\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s2(SideBar, \"HzZKGvC8NaWv7T6PpPv5w6rIsIg=\", false, function () {\n  return [useTraceUpdate];\n});\n_c = SideBar;\nexport default SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PORT","require","FETCH_TEMPLATE_PATH","useTraceUpdate","answers","setCaption","setAudioSource","setSoundStatus","setStartingTime","makeNewAudio","setTemplateId","_s","prev","useRef","useEffect","changedProps","Object","entries","reduce","ps","_ref","k","v","current","keys","length","console","log","props","SideBar","_ref2","_s2","iterateCaptions","template","item","lyrics","setCaptionForDuration","lyric","duration","Promise","resolve","setTimeout","getTotalCaptionTime","totalDuration","startAudio","audioFilePrefix","_id","Audio","audioFile","totalCaptionTime","handleClick","event","source","fetch","then","data","json","listItems","map","answer","children","text","fileName","_jsxFileName","lineNumber","columnNumber","templateId","onClick","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/SideBar.js"],"sourcesContent":["import React from \"react\";\nconst { PORT } = require(\"../backendConfig\");\nconst FETCH_TEMPLATE_PATH = `http://localhost:${PORT}/templates`;\n\nfunction useTraceUpdate(\n  answers,\n  setCaption,\n  setAudioSource,\n  setSoundStatus,\n  setStartingTime,\n  makeNewAudio,\n  setTemplateId\n) {\n  const prev = useRef(\n    answers,\n    setCaption,\n    setAudioSource,\n    setSoundStatus,\n    setStartingTime,\n    makeNewAudio,\n    setTemplateId\n  );\n  useEffect(() => {\n    const changedProps = Object.entries(\n      answers,\n      setCaption,\n      setAudioSource,\n      setSoundStatus,\n      setStartingTime,\n      makeNewAudio,\n      setTemplateId\n    ).reduce((ps, [k, v]) => {\n      if (prev.current[k] !== v) {\n        ps[k] = [prev.current[k], v];\n      }\n      return ps;\n    }, {});\n    if (Object.keys(changedProps).length > 0) {\n      console.log(\"Changed props:\", changedProps);\n    }\n    prev.current = props;\n  });\n}\n\nfunction SideBar({\n  answers,\n  setCaption,\n  setAudioSource,\n  setSoundStatus,\n  setStartingTime,\n  makeNewAudio,\n  setTemplateId,\n}) {\n  useTraceUpdate(\n    answers,\n    setCaption,\n    setAudioSource,\n    setSoundStatus,\n    setStartingTime,\n    makeNewAudio,\n    setTemplateId\n  );\n\n  async function iterateCaptions(template, setCaption) {\n    for (const item of template.lyrics) {\n      await setCaptionForDuration(item.lyric, item.duration, setCaption);\n    }\n  }\n\n  function setCaptionForDuration(lyric, duration, setCaption) {\n    return new Promise((resolve) => {\n      setCaption(lyric);\n      setTimeout(() => resolve(), duration);\n    });\n  }\n\n  function getTotalCaptionTime(template) {\n    let totalDuration = 0;\n    for (let item of template.lyrics) {\n      totalDuration += item.duration;\n    }\n    return totalDuration;\n  }\n  async function startAudio(template) {\n    const audioFilePrefix = \"data:audio/mpeg;base64,\";\n    //setAudioSource(audioFilePrefix + template.audioFile);\n    setTemplateId(template._id);\n    setStartingTime(0);\n    setSoundStatus(true);\n    makeNewAudio(new Audio(audioFilePrefix + template.audioFile));\n    const totalCaptionTime = getTotalCaptionTime(template);\n    setTimeout(() => setSoundStatus(false), totalCaptionTime);\n    await iterateCaptions(template, setCaption);\n    setCaption(\"Time to reflect ...\");\n  }\n\n  function handleClick(event) {\n    console.log(event.source);\n\n    const template = fetch(FETCH_TEMPLATE_PATH, {})\n      .then((data) => data.json())\n      .then((template) => {\n        console.log(template);\n        // update audio and show elements on screen\n        //updateAudio(template.audioFile);\n        //const audioAsBinary = window.atob(template.audioFile);\n        startAudio(template);\n      });\n\n    const listItems =\n      answers &&\n      answers.map((answer) => (\n        <li key={answer._id}>\n          <p>{answer.text}</p>\n          <p>{answer.templateId}</p>\n          <p>{answer._id}</p>\n        </li>\n      ));\n    console.log(\"Rendering sidebar : \", listItems);\n    return <ul onClick={handleClick}>{listItems}</ul>;\n  }\n}\n\nexport default SideBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}