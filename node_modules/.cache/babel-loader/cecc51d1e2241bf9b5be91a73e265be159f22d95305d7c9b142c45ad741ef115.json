{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/ReflectionArea.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Prompt from \"./Prompt\";\nimport AudioElement from \"./Audio\";\nimport SideBar from \"./SideBar\";\nimport FetchTemplateButton from \"./FetchTemplateButton\";\nimport ReflectionTextEntry from \"./ReflectionTextEntry\";\nimport { AudioCaptions } from \"./AudioCaptions\";\nimport UserContext from \"../context/UserContext\";\nimport FetchMyTemplateButton from \"./FetchMyTemplateButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PORT\n} = require(\"../backendConfig\");\nconst ANSWERS_API_PATH = `http://localhost:${PORT}/answers`;\nfunction noop() {}\nfunction ReflectionArea(_ref) {\n  _s();\n  let {\n    setUserAnswers,\n    userAnswers\n  } = _ref;\n  // Get reflection info and pass it to components\n  const [caption, setCaption] = useState(\"\");\n  const [soundStatus, setSoundStatus] = useState(false);\n  const [startingTime, setStartingTime] = useState(0);\n  const [audioSource, setAudioSource] = useState(\"/DEFAULT.mp3\");\n  const [audio, makeNewAudio] = useState({\n    play: noop,\n    pause: noop\n  });\n  const [templateId, setTemplateId] = useState(\"\");\n  const userId = React.useContext(UserContext);\n  async function submitReflection(text) {\n    await fetch(ANSWERS_API_PATH, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text,\n        templateId,\n        userId\n      })\n    }).then(res => res.json()).then(everyUserAnswer => {\n      console.log(\"answers we are updating sidebar with \");\n      console.log(everyUserAnswer);\n      setUserAnswers(everyUserAnswer);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reflectionArea\",\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      userAnswers: userAnswers,\n      setCaption: setCaption,\n      setAudioSource: setAudioSource,\n      setSoundStatus: setSoundStatus,\n      setStartingTime: setStartingTime,\n      makeNewAudio: makeNewAudio,\n      setTemplateId: setTemplateId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FetchTemplateButton, {\n      setCaption: setCaption,\n      setAudioSource: setAudioSource,\n      setSoundStatus: setSoundStatus,\n      setStartingTime: setStartingTime,\n      makeNewAudio: makeNewAudio,\n      setTemplateId: setTemplateId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FetchMyTemplateButton, {\n      setCaption: setCaption,\n      setAudioSource: setAudioSource,\n      setSoundStatus: setSoundStatus,\n      setStartingTime: setStartingTime,\n      makeNewAudio: makeNewAudio,\n      setTemplateId: setTemplateId,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Prompt, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioElement, {\n      source: audioSource,\n      playSound: soundStatus,\n      startingTime: startingTime,\n      audio: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioCaptions, {\n      caption: caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReflectionTextEntry, {\n      submitReflection: submitReflection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ReflectionArea, \"KoU3A7+NtUo9J+p2rUl0CgMJsKU=\");\n_c = ReflectionArea;\nexport default ReflectionArea;\nvar _c;\n$RefreshReg$(_c, \"ReflectionArea\");","map":{"version":3,"names":["React","useState","Prompt","AudioElement","SideBar","FetchTemplateButton","ReflectionTextEntry","AudioCaptions","UserContext","FetchMyTemplateButton","jsxDEV","_jsxDEV","PORT","require","ANSWERS_API_PATH","noop","ReflectionArea","_ref","_s","setUserAnswers","userAnswers","caption","setCaption","soundStatus","setSoundStatus","startingTime","setStartingTime","audioSource","setAudioSource","audio","makeNewAudio","play","pause","templateId","setTemplateId","userId","useContext","submitReflection","text","fetch","method","headers","body","JSON","stringify","then","res","json","everyUserAnswer","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","source","playSound","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/ReflectionArea.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Prompt from \"./Prompt\";\nimport AudioElement from \"./Audio\";\nimport SideBar from \"./SideBar\";\n\nimport FetchTemplateButton from \"./FetchTemplateButton\";\nimport ReflectionTextEntry from \"./ReflectionTextEntry\";\nimport { AudioCaptions } from \"./AudioCaptions\";\nimport UserContext from \"../context/UserContext\";\nimport FetchMyTemplateButton from \"./FetchMyTemplateButton\";\n\nconst { PORT } = require(\"../backendConfig\");\nconst ANSWERS_API_PATH = `http://localhost:${PORT}/answers`;\n\nfunction noop() {}\n\nfunction ReflectionArea({ setUserAnswers, userAnswers }) {\n  // Get reflection info and pass it to components\n  const [caption, setCaption] = useState(\"\");\n  const [soundStatus, setSoundStatus] = useState(false);\n  const [startingTime, setStartingTime] = useState(0);\n  const [audioSource, setAudioSource] = useState(\"/DEFAULT.mp3\");\n  const [audio, makeNewAudio] = useState({ play: noop, pause: noop });\n  const [templateId, setTemplateId] = useState(\"\");\n  const userId = React.useContext(UserContext);\n\n  async function submitReflection(text) {\n    await fetch(ANSWERS_API_PATH, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        text,\n        templateId,\n        userId,\n      }),\n    })\n      .then((res) => res.json())\n      .then((everyUserAnswer) => {\n        console.log(\"answers we are updating sidebar with \");\n        console.log(everyUserAnswer);\n        setUserAnswers(everyUserAnswer);\n      });\n  }\n\n  return (\n    <div className=\"reflectionArea\">\n      <SideBar\n        userAnswers={userAnswers}\n        setCaption={setCaption}\n        setAudioSource={setAudioSource}\n        setSoundStatus={setSoundStatus}\n        setStartingTime={setStartingTime}\n        makeNewAudio={makeNewAudio}\n        setTemplateId={setTemplateId}\n      />\n      <FetchTemplateButton\n        setCaption={setCaption}\n        setAudioSource={setAudioSource}\n        setSoundStatus={setSoundStatus}\n        setStartingTime={setStartingTime}\n        makeNewAudio={makeNewAudio}\n        setTemplateId={setTemplateId}\n      />\n      <FetchMyTemplateButton\n        setCaption={setCaption}\n        setAudioSource={setAudioSource}\n        setSoundStatus={setSoundStatus}\n        setStartingTime={setStartingTime}\n        makeNewAudio={makeNewAudio}\n        setTemplateId={setTemplateId}\n        userId={userId}\n      />\n      <Prompt />\n      <AudioElement\n        source={audioSource}\n        playSound={soundStatus}\n        startingTime={startingTime}\n        audio={audio}\n      />\n      <AudioCaptions caption={caption} />\n      <ReflectionTextEntry submitReflection={submitReflection} />\n    </div>\n  );\n}\n\nexport default ReflectionArea;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}