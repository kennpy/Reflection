{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/TemplateForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PORT\n} = require(\"../backendConfig\");\nconst FETCH_LOGIN_PATH = `http://localhost:${PORT}/users/login`;\nfunction TemplateForm() {\n  _s();\n  const [mp3, setMp3] = useState(\"\");\n  const [lyrics, setLyrics] = useState([]);\n  const [singleLyric, setSingleLyric] = useState(\"\");\n  const [lyricDuration, setLyricDuration] = useState([]);\n  const [fileName, setFileName] = useState(\"\");\n  function checkFormIsFilled() {\n    return lyricDuration !== \"\" && singleLyric !== \"\" && lyricDuration !== \"\" && fileName !== \"\";\n  }\n  async function handleSubmission(evt) {\n    evt.preventDefault();\n    const formIsFilled = checkFormIsFilled();\n    console.log(formIsFilled);\n    const mp3Data = evt.currentTarget.files;\n    console.log(mp3Data);\n    // if (formIsFilled) {\n    //   // validate sign in info on backend and sign them in\n    //   fetch(FETCH_LOGIN_PATH, {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       username,\n    //       password,\n    //     }),\n    //   })\n    //     .then((res) => res.json())\n    //     .then((login) => {\n    //       if (login.success) {\n    //         console.log(\"LOGIN SUCCESS\", login);\n    //         setUserId(login.userId);\n    //         setUserName(login.username);\n    //       } else {\n    //         console.log(\"LOGIN FAILURE\");\n    //       }\n    //     });\n    //   // else show invalid credentials\n    // }\n  }\n\n  function addLyric(event) {\n    event.preventDefault();\n    setLyrics(oldLyrics => [...oldLyrics, {\n      lyric: singleLyric,\n      duration: lyricDuration\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MAKE NEW FORM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filename\",\n          children: \"File Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: fileName,\n          placeholder: \"File Name\",\n          onChange: e => setFileName(e.target.value),\n          id: \"filename\",\n          name: \"filename\",\n          type: \"text\",\n          autoComplete: \"off\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mp3\",\n          children: \"MP3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: mp3,\n          placeholder: \"MP3\",\n          onChange: e => setMp3(e.target.value),\n          id: \"mp3\",\n          name: \"mp3\",\n          type: \"file\",\n          autoComplete: \"off\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lyric\",\n          children: \"Caption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: singleLyric,\n          placeholder: \"Caption\",\n          onChange: e => setSingleLyric(e.target.value),\n          id: \"lyric\",\n          name: \"lyric\",\n          type: \"text\",\n          autoComplete: \"off\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: lyricDuration,\n          placeholder: \"Lyric Duration\",\n          onChange: e => setLyricDuration(e.target.value),\n          id: \"lyricDuration\",\n          name: \"lyricDuration\",\n          type: \"text\",\n          autoComplete: \"off\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"add-lyric-btn\",\n          onClick: addLyric,\n          children: \"Add Lyric\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSubmission,\n          children: \"Make Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(TemplateForm, \"uy8oV4iJ3qxb/kVBra0FqyWqCY0=\");\n_c = TemplateForm;\nexport default TemplateForm;\nvar _c;\n$RefreshReg$(_c, \"TemplateForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PORT","require","FETCH_LOGIN_PATH","TemplateForm","_s","mp3","setMp3","lyrics","setLyrics","singleLyric","setSingleLyric","lyricDuration","setLyricDuration","fileName","setFileName","checkFormIsFilled","handleSubmission","evt","preventDefault","formIsFilled","console","log","mp3Data","currentTarget","files","addLyric","event","oldLyrics","lyric","duration","className","children","_jsxFileName","lineNumber","columnNumber","htmlFor","value","placeholder","onChange","e","target","id","name","type","autoComplete","required","onClick","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/TemplateForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nconst { PORT } = require(\"../backendConfig\");\nconst FETCH_LOGIN_PATH = `http://localhost:${PORT}/users/login`;\n\nfunction TemplateForm() {\n  const [mp3, setMp3] = useState(\"\");\n  const [lyrics, setLyrics] = useState([]);\n  const [singleLyric, setSingleLyric] = useState(\"\");\n  const [lyricDuration, setLyricDuration] = useState([]);\n  const [fileName, setFileName] = useState(\"\");\n\n  function checkFormIsFilled() {\n    return (\n      lyricDuration !== \"\" &&\n      singleLyric !== \"\" &&\n      lyricDuration !== \"\" &&\n      fileName !== \"\"\n    );\n  }\n\n  async function handleSubmission(evt) {\n    evt.preventDefault();\n    const formIsFilled = checkFormIsFilled();\n    console.log(formIsFilled);\n    const mp3Data = evt.currentTarget.files;\n    console.log(mp3Data);\n    // if (formIsFilled) {\n    //   // validate sign in info on backend and sign them in\n    //   fetch(FETCH_LOGIN_PATH, {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       username,\n    //       password,\n    //     }),\n    //   })\n    //     .then((res) => res.json())\n    //     .then((login) => {\n    //       if (login.success) {\n    //         console.log(\"LOGIN SUCCESS\", login);\n    //         setUserId(login.userId);\n    //         setUserName(login.username);\n    //       } else {\n    //         console.log(\"LOGIN FAILURE\");\n    //       }\n    //     });\n    //   // else show invalid credentials\n    // }\n  }\n\n  function addLyric(event) {\n    event.preventDefault();\n    setLyrics((oldLyrics) => [\n      ...oldLyrics,\n      { lyric: singleLyric, duration: lyricDuration },\n    ]);\n  }\n\n  return (\n    <div className=\"login-page\">\n      <h2>MAKE NEW FORM</h2>\n      <form>\n        <div>\n          <label htmlFor=\"filename\">File Name</label>\n          <input\n            value={fileName}\n            placeholder=\"File Name\"\n            onChange={(e) => setFileName(e.target.value)}\n            id=\"filename\"\n            name=\"filename\"\n            type=\"text\"\n            autoComplete=\"off\"\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"mp3\">MP3</label>\n          <input\n            value={mp3}\n            placeholder=\"MP3\"\n            onChange={(e) => setMp3(e.target.value)}\n            id=\"mp3\"\n            name=\"mp3\"\n            type=\"file\"\n            autoComplete=\"off\"\n            required\n          />\n        </div>\n        <br></br>\n        <div>\n          <label htmlFor=\"lyric\">Caption</label>\n          <input\n            value={singleLyric}\n            placeholder=\"Caption\"\n            onChange={(e) => setSingleLyric(e.target.value)}\n            id=\"lyric\"\n            name=\"lyric\"\n            type=\"text\"\n            autoComplete=\"off\"\n            required\n          />\n          <input\n            value={lyricDuration}\n            placeholder=\"Lyric Duration\"\n            onChange={(e) => setLyricDuration(e.target.value)}\n            id=\"lyricDuration\"\n            name=\"lyricDuration\"\n            type=\"text\"\n            autoComplete=\"off\"\n            required\n          />\n          <br></br>\n\n          <button type=\"add-lyric-btn\" onClick={addLyric}>\n            Add Lyric\n          </button>\n        </div>\n        <div>\n          <br></br>\n\n          <button type=\"submit\" onClick={handleSubmission}>\n            Make Template\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default TemplateForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}