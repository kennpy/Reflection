{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/SideBar.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PORT\n} = require(\"../backendConfig\");\nconst FETCH_TEMPLATE_PATH = `http://localhost:${PORT}/templates`;\nfunction SideBar(_ref) {\n  let {\n    answers,\n    setCaption,\n    setAudioSource,\n    setSoundStatus,\n    setStartingTime,\n    makeNewAudio,\n    setTemplateId\n  } = _ref;\n  async function iterateCaptions(template, setCaption) {\n    for (const item of template.lyrics) {\n      await setCaptionForDuration(item.lyric, item.duration, setCaption);\n    }\n  }\n  function setCaptionForDuration(lyric, duration, setCaption) {\n    return new Promise(resolve => {\n      setCaption(lyric);\n      setTimeout(() => resolve(), duration);\n    });\n  }\n  function getTotalCaptionTime(template) {\n    let totalDuration = 0;\n    for (let item of template.lyrics) {\n      totalDuration += item.duration;\n    }\n    return totalDuration;\n  }\n  async function startAudio(template) {\n    const audioFilePrefix = \"data:audio/mpeg;base64,\";\n    //setAudioSource(audioFilePrefix + template.audioFile);\n    setTemplateId(template._id);\n    setStartingTime(0);\n    setSoundStatus(true);\n    makeNewAudio(new Audio(audioFilePrefix + template.audioFile));\n    const totalCaptionTime = getTotalCaptionTime(template);\n    setTimeout(() => setSoundStatus(false), totalCaptionTime);\n    await iterateCaptions(template, setCaption);\n    setCaption(\"Time to reflect ...\");\n  }\n  function handleClick(event) {\n    console.log(event.source);\n    const template = fetch(FETCH_TEMPLATE_PATH, {}).then(data => data.json()).then(template => {\n      console.log(template);\n      // update audio and show elements on screen\n      //updateAudio(template.audioFile);\n      //const audioAsBinary = window.atob(template.audioFile);\n      startAudio(template);\n    });\n    console.log(\"answers \", answers);\n    const listItems = answers && answers.map(answer => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer.templateId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, answer._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this));\n    console.log(\"Rendering sidebar : \", listItems);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: handleClick,\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n}\n_c = SideBar;\nexport default SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PORT","require","FETCH_TEMPLATE_PATH","SideBar","_ref","answers","setCaption","setAudioSource","setSoundStatus","setStartingTime","makeNewAudio","setTemplateId","iterateCaptions","template","item","lyrics","setCaptionForDuration","lyric","duration","Promise","resolve","setTimeout","getTotalCaptionTime","totalDuration","startAudio","audioFilePrefix","_id","Audio","audioFile","totalCaptionTime","handleClick","event","console","log","source","fetch","then","data","json","listItems","map","answer","children","text","fileName","_jsxFileName","lineNumber","columnNumber","templateId","onClick","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/SideBar.js"],"sourcesContent":["import React from \"react\";\nconst { PORT } = require(\"../backendConfig\");\nconst FETCH_TEMPLATE_PATH = `http://localhost:${PORT}/templates`;\n\nfunction SideBar({\n  answers,\n  setCaption,\n  setAudioSource,\n  setSoundStatus,\n  setStartingTime,\n  makeNewAudio,\n  setTemplateId,\n}) {\n  async function iterateCaptions(template, setCaption) {\n    for (const item of template.lyrics) {\n      await setCaptionForDuration(item.lyric, item.duration, setCaption);\n    }\n  }\n\n  function setCaptionForDuration(lyric, duration, setCaption) {\n    return new Promise((resolve) => {\n      setCaption(lyric);\n      setTimeout(() => resolve(), duration);\n    });\n  }\n\n  function getTotalCaptionTime(template) {\n    let totalDuration = 0;\n    for (let item of template.lyrics) {\n      totalDuration += item.duration;\n    }\n    return totalDuration;\n  }\n  async function startAudio(template) {\n    const audioFilePrefix = \"data:audio/mpeg;base64,\";\n    //setAudioSource(audioFilePrefix + template.audioFile);\n    setTemplateId(template._id);\n    setStartingTime(0);\n    setSoundStatus(true);\n    makeNewAudio(new Audio(audioFilePrefix + template.audioFile));\n    const totalCaptionTime = getTotalCaptionTime(template);\n    setTimeout(() => setSoundStatus(false), totalCaptionTime);\n    await iterateCaptions(template, setCaption);\n    setCaption(\"Time to reflect ...\");\n  }\n\n  function handleClick(event) {\n    console.log(event.source);\n\n    const template = fetch(FETCH_TEMPLATE_PATH, {})\n      .then((data) => data.json())\n      .then((template) => {\n        console.log(template);\n        // update audio and show elements on screen\n        //updateAudio(template.audioFile);\n        //const audioAsBinary = window.atob(template.audioFile);\n        startAudio(template);\n      });\n\n    console.log(\"answers \", answers);\n    const listItems =\n      answers &&\n      answers.map((answer) => (\n        <li key={answer._id}>\n          <p>{answer.text}</p>\n          <p>{answer.templateId}</p>\n          <p>{answer._id}</p>\n        </li>\n      ));\n    console.log(\"Rendering sidebar : \", listItems);\n    return <ul onClick={handleClick}>{listItems}</ul>;\n  }\n}\n\nexport default SideBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}