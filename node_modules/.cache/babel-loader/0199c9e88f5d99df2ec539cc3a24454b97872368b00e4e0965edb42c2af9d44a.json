{"ast":null,"code":"var _jsxFileName = \"/Users/kenjismith/programming/personal/reflect/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PORT\n} = require(\"../backendConfig\");\nconst FETCH_LOGIN_PATH = `http://localhost:${PORT}/users/login`;\nfunction Login(_ref) {\n  _s();\n  let {\n    setUserId\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginErrorExists, setLoginError] = useState(false);\n  const [loginErrorMessage, setLoginErrorMessage] = useState(\"\");\n  function checkFormIsFilled() {\n    let formIsFilled = true;\n    if (username === \"\") {\n      setLoginErrorMessage(\"Username cannot be empty\");\n      formIsFilled = false;\n    } else if (password === \"\") {\n      setLoginErrorMessage(\"Password cannot be empty\");\n      formIsFilled = false;\n    }\n    return formIsFilled;\n  }\n  async function handleLogin(evt) {\n    evt.preventDefault();\n    const formIsFilled = checkFormIsFilled();\n    if (formIsFilled) {\n      // validate sign in info on backend and sign them in\n      fetch(FETCH_LOGIN_PATH, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      }).then(res => res.json()).then(loginDetails => {\n        if (loginDetails.success) {\n          console.log(\"LOGIN SUCCESS\", loginDetails);\n        } else {\n          console.log(\"LOGIN FAILURE\");\n        }\n      });\n      //else show invalid credentials\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          placeholder: \"Username\",\n          onChange: e => setUsername(e.target.value),\n          id: \"username\",\n          name: \"username\",\n          type: \"text\",\n          autocomplete: \"username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"current-password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value),\n          id: \"current-password\",\n          name: \"password\",\n          type: \"password\",\n          autocomplete: \"current-password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleLogin,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"b6y1khU/cky2Zm0xKO3gvNQ95rE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PORT","require","FETCH_LOGIN_PATH","Login","_ref","_s","setUserId","username","setUsername","password","setPassword","loginErrorExists","setLoginError","loginErrorMessage","setLoginErrorMessage","checkFormIsFilled","formIsFilled","handleLogin","evt","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","loginDetails","success","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","for","value","placeholder","onChange","e","target","id","name","type","autocomplete","required","onClick","_c","$RefreshReg$"],"sources":["/Users/kenjismith/programming/personal/reflect/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nconst { PORT } = require(\"../backendConfig\");\nconst FETCH_LOGIN_PATH = `http://localhost:${PORT}/users/login`;\n\nfunction Login({ setUserId }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginErrorExists, setLoginError] = useState(false);\n  const [loginErrorMessage, setLoginErrorMessage] = useState(\"\");\n\n  function checkFormIsFilled() {\n    let formIsFilled = true;\n    if (username === \"\") {\n      setLoginErrorMessage(\"Username cannot be empty\");\n      formIsFilled = false;\n    } else if (password === \"\") {\n      setLoginErrorMessage(\"Password cannot be empty\");\n      formIsFilled = false;\n    }\n    return formIsFilled;\n  }\n\n  async function handleLogin(evt) {\n    evt.preventDefault();\n    const formIsFilled = checkFormIsFilled();\n    if (formIsFilled) {\n      // validate sign in info on backend and sign them in\n      fetch(FETCH_LOGIN_PATH, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username,\n          password,\n        }),\n      })\n        .then((res) => res.json())\n        .then((loginDetails) => {\n          if (loginDetails.success) {\n            console.log(\"LOGIN SUCCESS\", loginDetails);\n          } else {\n            console.log(\"LOGIN FAILURE\");\n          }\n        });\n      //else show invalid credentials\n    }\n  }\n\n  return (\n    <div className=\"login-page\">\n      <h2>LOGIN</h2>\n      <form>\n        <div>\n          <label for=\"username\">Username</label>\n          <input\n            value={username}\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n            id=\"username\"\n            name=\"username\"\n            type=\"text\"\n            autocomplete=\"username\"\n            required\n          />\n        </div>\n        <div>\n          <label for=\"current-password\">Password</label>\n          <input\n            value={password}\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            id=\"current-password\"\n            name=\"password\"\n            type=\"password\"\n            autocomplete=\"current-password\"\n            required\n          />\n        </div>\n        <div>\n          <button type=\"submit\" onClick={handleLogin}>\n            Sign in\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAM;EAAEC;AAAK,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC5C,MAAMC,gBAAgB,GAAI,oBAAmBF,IAAK,cAAa;AAE/D,SAASG,KAAKA,CAAAC,IAAA,EAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAC1B,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,gBAAgB,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACgB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE9D,SAASkB,iBAAiBA,CAAA,EAAG;IAC3B,IAAIC,YAAY,GAAG,IAAI;IACvB,IAAIT,QAAQ,KAAK,EAAE,EAAE;MACnBO,oBAAoB,CAAC,0BAA0B,CAAC;MAChDE,YAAY,GAAG,KAAK;IACtB,CAAC,MAAM,IAAIP,QAAQ,KAAK,EAAE,EAAE;MAC1BK,oBAAoB,CAAC,0BAA0B,CAAC;MAChDE,YAAY,GAAG,KAAK;IACtB;IACA,OAAOA,YAAY;EACrB;EAEA,eAAeC,WAAWA,CAACC,GAAG,EAAE;IAC9BA,GAAG,CAACC,cAAc,CAAC,CAAC;IACpB,MAAMH,YAAY,GAAGD,iBAAiB,CAAC,CAAC;IACxC,IAAIC,YAAY,EAAE;MAChB;MACAI,KAAK,CAAClB,gBAAgB,EAAE;QACtBmB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBlB,QAAQ;UACRE;QACF,CAAC;MACH,CAAC,CAAC,CACCiB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,YAAY,IAAK;QACtB,IAAIA,YAAY,CAACC,OAAO,EAAE;UACxBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,YAAY,CAAC;QAC5C,CAAC,MAAM;UACLE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC9B;MACF,CAAC,CAAC;MACJ;IACF;EACF;;EAEA,oBACEjC,OAAA;IAAKkC,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBnC,OAAA;MAAAmC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdvC,OAAA;MAAAmC,QAAA,gBACEnC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAOwC,GAAG,EAAC,UAAU;UAAAL,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtCvC,OAAA;UACEyC,KAAK,EAAEjC,QAAS;UAChBkC,WAAW,EAAC,UAAU;UACtBC,QAAQ,EAAGC,CAAC,IAAKnC,WAAW,CAACmC,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;UAC7CK,EAAE,EAAC,UAAU;UACbC,IAAI,EAAC,UAAU;UACfC,IAAI,EAAC,MAAM;UACXC,YAAY,EAAC,UAAU;UACvBC,QAAQ;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAOwC,GAAG,EAAC,kBAAkB;UAAAL,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CvC,OAAA;UACEyC,KAAK,EAAE/B,QAAS;UAChBgC,WAAW,EAAC,UAAU;UACtBC,QAAQ,EAAGC,CAAC,IAAKjC,WAAW,CAACiC,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;UAC7CK,EAAE,EAAC,kBAAkB;UACrBC,IAAI,EAAC,UAAU;UACfC,IAAI,EAAC,UAAU;UACfC,YAAY,EAAC,kBAAkB;UAC/BC,QAAQ;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvC,OAAA;QAAAmC,QAAA,eACEnC,OAAA;UAAQgD,IAAI,EAAC,QAAQ;UAACG,OAAO,EAAEjC,WAAY;UAAAiB,QAAA,EAAC;QAE5C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjC,EAAA,CAnFQF,KAAK;AAAAgD,EAAA,GAALhD,KAAK;AAqFd,eAAeA,KAAK;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}